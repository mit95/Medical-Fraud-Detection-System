/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DepartmentOfPublicHealth.MedServicesOfficer;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FraudDetectionEnterprise;
import Business.Network.Network;
import Business.Organization.FraudDetectionAgency.LawEnforcementOrganization;
import Business.Organization.Hospital.ReleaseOfInfoOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ComplainWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author mitka
 */
public class ProcessServicesFraudJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessServicesFraudJPanel
     */
    JPanel userProcessContainer;
    ComplainWorkRequest request;
    EcoSystem business;
    UserAccount account;
    
    public ProcessServicesFraudJPanel(JPanel userProcessContainer, ComplainWorkRequest request, EcoSystem business, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.business = business;
        this.account = account;
        
        fraudresultComboBox.removeAllItems();
        
        
        patientFileLabel.setText(request.getPatientstatusDoc());
        HospitalFileLabel.setText(request.getHospitalstatusDoc());
        
        checkButtonStatus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        HospitalFileLabel = new javax.swing.JLabel();
        patientdwnloadBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        hospdownloadBtn = new javax.swing.JButton();
        requesttohospButton = new javax.swing.JButton();
        patientFileLabel = new javax.swing.JLabel();
        resultTextField = new javax.swing.JTextField();
        complainButton = new javax.swing.JButton();
        fraudresultComboBox = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(210, 247, 247));

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        submitBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Message:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Patient File:");

        HospitalFileLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        patientdwnloadBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        patientdwnloadBtn.setText("Download");
        patientdwnloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientdwnloadBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Hospital File:");

        hospdownloadBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        hospdownloadBtn.setText("Download");
        hospdownloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospdownloadBtnActionPerformed(evt);
            }
        });

        requesttohospButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        requesttohospButton.setText("Request Patient File From Hospital");
        requesttohospButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requesttohospButtonActionPerformed(evt);
            }
        });

        patientFileLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        complainButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        complainButton.setText("Complain to Law Enforcement");
        complainButton.setEnabled(false);
        complainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complainButtonActionPerformed(evt);
            }
        });

        fraudresultComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField1.setBackground(new java.awt.Color(210, 247, 247));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField1.setText("FRAUD COMPLAIN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fraudresultComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HospitalFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientdwnloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(complainButton, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hospdownloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(416, 416, 416)
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(requesttohospButton)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(backBtn)))
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(patientFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientdwnloadBtn))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(HospitalFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospdownloadBtn))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fraudresultComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(complainButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requesttohospButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(131, 131, 131))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkButtonStatus(){
        if(request.getPatientstatusDoc().equals("File received")&&request.getHospitalstatusDoc().equals("File received")){
            complainButton.setEnabled(true);
            fraudresultComboBox.addItem("Fraud Detected");
            fraudresultComboBox.addItem("No Fraud Detected");
        }
        
        if(request.getHospitalstatusDoc().equals("File received")){
            requesttohospButton.setEnabled(false);
        }
    }
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        backbtn();
    }//GEN-LAST:event_backBtnActionPerformed

    public void backbtn(){
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        MedServiceOfficerWorkAreaJPanel dwjp = (MedServiceOfficerWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }
    
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        if(resultTextField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter your analysis result");
        }
        else{
            request.setStatus("Completed");
            request.setFraudDetected(resultTextField.getText());
            JOptionPane.showMessageDialog(null, "Patient has been notified");
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void patientdwnloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientdwnloadBtnActionPerformed
        // TODO add your handling code here:
        String paths = "\""+request.getPath()+"\"";
        try{
                if(!paths.equals("\""+null+"\"")){
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+
                                      paths);
                request.setPatientstatusDoc("File received");
                patientFileLabel.setText("File received");
                checkButtonStatus();
                }
                else{
                    request.setPatientstatusDoc("File not received");
                    patientFileLabel.setText("File not received");
                    
                }
        }
        catch(Exception e){
            patientFileLabel.setText("File not received");
            
        }
    }//GEN-LAST:event_patientdwnloadBtnActionPerformed

    private void hospdownloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospdownloadBtnActionPerformed
        // TODO add your handling code here:
        String paths = "\""+request.getHosppath()+"\"";
        try{
            if(!paths.equals("\""+null+"\"")){
            Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+
                                      paths);
            HospitalFileLabel.setText("File received");
            request.setHospitalstatusDoc("File received");
            checkButtonStatus();
            }
            else{
                HospitalFileLabel.setText("File not received");
                request.setHospitalstatusDoc("File not received");
            }
        }
        catch(Exception e){
            HospitalFileLabel.setText("File not received");
        }
    }//GEN-LAST:event_hospdownloadBtnActionPerformed

    private void requesttohospButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requesttohospButtonActionPerformed
        // TODO add your handling code here:
            for(Network network:business.getNetworkList()){
            for(Enterprise e:network.getEnterpriseDirectory().getEnterpriseList()){
                if(e.getName().equals(request.getEnterpriseName())){
                    for(Organization org:e.getOrganizationDirectory().getOrganizationList()){
                        if(org instanceof ReleaseOfInfoOrganization){
                          org.getWorkQueue().getComplainWorkRequestList().add(request);
                          JOptionPane.showMessageDialog(null, "Request sent to hospital for documents");
                      }
                  }
               }
           } 
        }
      
    }//GEN-LAST:event_requesttohospButtonActionPerformed

    private void complainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_complainButtonActionPerformed
        // TODO add your handling code here:
        if(fraudresultComboBox.getSelectedItem()=="Fraud Detected"){
            request.setGovMessage("Fraud Detected for patient "+request.getSender());
            ComplainToLawJPanel complaintolawJPanel = new ComplainToLawJPanel(userProcessContainer,request,business, account);
            userProcessContainer.add("ComplainToLawJpanel", complaintolawJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Please choose the correct option in combobox");
        }
        
    }//GEN-LAST:event_complainButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HospitalFileLabel;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton complainButton;
    private javax.swing.JComboBox fraudresultComboBox;
    private javax.swing.JButton hospdownloadBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel patientFileLabel;
    private javax.swing.JButton patientdwnloadBtn;
    private javax.swing.JButton requesttohospButton;
    private javax.swing.JTextField resultTextField;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
